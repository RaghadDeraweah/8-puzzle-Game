/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author A To Z
 */
import java.util.Vector;
//import org.w3c.dom.Node;

public class Ai extends javax.swing.JFrame {

    /**
     * Creates new form Ai
     */
    public Ai() {
        initComponents();
        //jTextArea1.setEditable(false);
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        h1 = new javax.swing.JRadioButton();
        h2 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        Astar = new javax.swing.JRadioButton();
        Greedy = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aiproject/22.PNG"))); // NOI18N

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jTextField7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jTextField8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jTextField9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 153, 153));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Goal");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 153, 153));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 153, 153));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Solve");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Heuristic :");

        buttonGroup1.add(h1);
        h1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h1.setForeground(new java.awt.Color(0, 153, 153));
        h1.setText("Tiles out of place");
        h1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(h2);
        h2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h2.setForeground(new java.awt.Color(0, 153, 153));
        h2.setText("Sum of distances out of place");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText(" Algorithm :");

        buttonGroup2.add(Astar);
        Astar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Astar.setForeground(new java.awt.Color(0, 153, 153));
        Astar.setText("A*");

        buttonGroup2.add(Greedy);
        Greedy.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Greedy.setForeground(new java.awt.Color(0, 153, 153));
        Greedy.setText("Greedy");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(h1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(h2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Greedy, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Astar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(h1)
                                .addGap(18, 18, 18)
                                .addComponent(h2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Astar)
                        .addGap(18, 18, 18)
                        .addComponent(Greedy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    String []startArr = new String[9];
    String []goalArr = new String[9];
    
 

public class Node {
    public String[] s;     // Contains state information
    // Estimate of remaining cost
    public int cost;        // Cost of this particular node
    public Node parent;   // Reference to the node's immediate parent
    public boolean left;
    public boolean up;
    public boolean right;
    public boolean down;
    public Node nleft;
    public Node nright;
    public Node nup;
    public Node ndown;
 
  

  // Constructor
    public Node(String [] starr, int cost) {
        this.s= starr;
        this.cost = cost;}
    public int f;          // Value of heuristic evaluation function (f = g + h)
    public int g=this.cost;// Accumulated cost
    public String htn;
    public void sethtn(String htype){ htn=htype;}
    public int h;//=hamming(s,goalArr);  
    public void stterff(int vf){
        f=vf;}
    public void seth(int vh){
        h=vh;}
    public ArrayList<Node> successors (){
        jTextArea2.append("in succssors \n");
        ArrayList<Node> nodes=new ArrayList<Node>();
        int r=1;
        int c=1;
        int lef=0;
        int up=0;
        int down=0;
        int right=0;
        String [][] matst=new String[3][3];
        String [][]matgo=new String[3][3];       
        int k=0;
        for(int i=0;i<3;i++){   //convert array to matrix
            for(int j=0;j<3;j++){
                matst[i][j]=s[k];
                //matgo[i][j]=gm[k];
                k++;
            }
        }
        for(int x=0; x<3;x++){   //get cord of "-"
            for(int y=0; y<3;y++){   
                if(matst[x][y].equals("-")){
                    r=x;
                    c =y;
                    break;
            }
        }}
       
       
        if(c != 0){   //move left
            lef=1;
            String [][] mtemp= new String[3][3];
            String [] atemp= new String[9];
            int o=0;           
            for(int i=0; i<3;i++){  // array for left succser
                for(int j=0; j<3;j++){   
                    mtemp[i][j]=matst[i][j];
                    if(i==r & j==c){ 
                    String stemp=matst[i][j-1];
                    mtemp[i][j]=stemp;
                    mtemp[i][j-1]="-";
                    }
               }
       }
           
        for(int i=0;i<3;i++){   //convert array to matrix
            for(int j=0;j<3;j++){
                atemp[o]=mtemp[i][j];
                //matgo[i][j]=gm[k];
                o++;
            }
        }
           
        nleft= new Node(atemp,this.cost+1); //left succ ready 
        if(htn.equals("hamm"))
        { nleft.seth(hamming(atemp,goalArr));}
        else {nleft.seth(manhattan(atemp,goalArr));}
        nleft.stterff(nleft.g+nleft.h);
        //nleft.parent=new Node(this.s,this.cost);
        nodes.add(nleft);
        jTextArea2.append("left succ"+nleft.toostring()+"\n");
       
      }
        if( c!= 2){
            right=1;
            String [][] mtemp= new String[3][3];
            String [] atemp= new String[9];
            int o=0;
           
            for(int i=0; i<3;i++){  // array for right succser
                for(int j=0; j<3;j++){   
                    mtemp[i][j]=matst[i][j];
                    if(i==r & j==c+1){ 
                        String stemp=matst[i][j];
                        mtemp[i][j-1]=stemp;
                        mtemp[i][j]="-";
                    }
               }
       }
           
            for(int i=0;i<3;i++){   //convert array to matrix
                for(int j=0;j<3;j++){
                    atemp[o]=mtemp[i][j];
                    o++;
            }
        }
           
            nright= new Node(atemp,this.cost+1); //right succ ready
            if(htn.equals("hamm")){ nright.seth(hamming(atemp,goalArr));}
            else
            {nright.seth(manhattan(atemp,goalArr));}
            nright.stterff(nright.g+nright.h);
            nodes.add(nright);
            jTextArea2.append("right succ"+nright.toostring()+"\n");
       }
        if(r!=0) {
            up=1;
            String [][] mtemp= new String[3][3];
            String [] atemp= new String[9];
            int o=0;
           
            for(int i=0; i<3;i++){  // array for up succser
                for(int j=0; j<3;j++){   
                    mtemp[i][j]=matst[i][j];
                    if(i==r & j==c){ 
                    String stemp=matst[i-1][j];
                    mtemp[i][j]=stemp;
                    mtemp[i-1][j]="-";
                    }
               }
       }
           
            for(int i=0;i<3;i++){   //convert array to matrix
                for(int j=0;j<3;j++){
                atemp[o]=mtemp[i][j];
                //matgo[i][j]=gm[k];
                o++;
            }
        }
            
            nup= new Node(atemp,this.cost+1); //up succ ready   
            if(htn.equals("hamm"))
            {nup.seth(hamming(nup.s,goalArr));}
            else{nup.seth(manhattan(nup.s,goalArr));}
            nup.stterff(nup.g+nup.h);
            nodes.add(nup);
            jTextArea2.append("up succ"+nup.toostring()+"\n");
       
       
       }
        if(r!=2){ 
            down=1;
            String [][] mtemp= new String[3][3];
            String [] atemp= new String[9];
            int o=0;
           
            for(int i=0; i<3;i++){  // array for down succser
                for(int j=0; j<3;j++){   
                    mtemp[i][j]=matst[i][j];
                    if(i==r+1 & j==c){ 
                    String stemp=matst[i][j];
                    mtemp[i-1][j]=stemp;
                    mtemp[i][j]="-";
                    }
               }
       }
           
            for(int i=0;i<3;i++){   //convert array to matrix
                for(int j=0;j<3;j++){
                    atemp[o]=mtemp[i][j];
                    o++;
            }
        }
           
            ndown= new Node(atemp,this.cost+1); //down succ ready
            if(htn.equals("hamm"))
            {ndown.seth(hamming(atemp,goalArr));}/////hamming??manhattan???
            else{ndown.seth(manhattan(atemp,goalArr));}
            ndown.stterff(ndown.g+ndown.h);
            nodes.add(ndown);
            jTextArea2.append("down succ"+ndown.toostring()+"\n");
       }
       
    return nodes;
   }        
   
  // Convert node to string
public String toostring() {
    String sn="{"; 
    for(int m=0;m<s.length;m++){
        sn+=" "+s[m];}  
    sn+="}";
    return sn;
  }

 //check if this node is goal
public boolean estimate() {
      
    if(this.h==0){
        jTextArea2.append("\n"+"i am goooal n succ \n");
	return true;//state.estimate(goalnode.state);
      }
    return false;
  }

} // End class Node
public class AStar {
    String astarh;
    public Node initialnode=new Node(startArr,0);  // Start node
    public Node goalnode=new Node(goalArr,0);     // Desired goal node
    public Node n;            // Node retrieved from OPEN
    public Node tempNode;     // Temporary node

    public ArrayList<Node> OPEN;       // ArrayList with Node elements
    public ArrayList<Node> CLOSED;     //
    public ArrayList<Node> M;          //
    private int low;          // Used when selecting a node to retrive from OPEN 
    private int lowIndex;     // 
    private int number;       // Temporary integer storage
    public void solve( String ht) {
        System.out.println("in solve \n");
    // Initializing the initial node
        if(h2.equals("hamm"))
        {initialnode.h = hamming(startArr,goalArr);}
        else{initialnode.h = manhattan(startArr,goalArr);}
        initialnode.stterff(initialnode.h+initialnode.g);        
    // Instantiating OPEN, CLOSED and M
        OPEN = new ArrayList<Node>();
        CLOSED = new ArrayList<Node>();
        M = new ArrayList<Node>();
    // Placing initial node on OPEN
        OPEN.add(initialnode);
    // After finishing the initial phase, we enter the main loop 
	 // of the A* algorithm
    do{
       System.out.println("in while loop /n");
      // Check if OPEN is empty, exit if this is the case
        if (OPEN.isEmpty()) {
            jTextArea2.append("Failure to solve problem:");
            System.out.println("Failure to solve problem:");
	    jTextArea2.append("OPEN is empty, exiting...");
            System.out.println("OPEN is empty, exiting...");
            return;
      }

      // Locate next node to retrieve from OPEN, based on lowest f
        lowIndex = 0;
        low = OPEN.get(lowIndex).f; //low = ((Node)OPEN.elementAt(0)).f;
        for (int i = 0; i < OPEN.size(); i++) {
            number = OPEN.get(i).f; //number = ((Node)OPEN.elementAt(i)).f;
	    if (number < low) {
	        lowIndex = i;
		low = number;
		  }
      }

      // Move selected node from OPEN to n
        n = OPEN.get(lowIndex); 
        n.sethtn(ht);
        jTextArea2.append("\n"+"current node"+n.toostring()+"\n");
        System.out.println("\n"+"current node"+n.toostring()+"\n");
     //OPEN.remove(lowIndex);
    

      // Successful exit if n proves to be the goal node
        if (n.estimate()) {
            System.out.println("in gooooooal");
            printm(n);
            break;
      }

      // Retrieve all possible successors of n
      
   //   M = n.successors();
    M = n.successors();
    if(n.nleft!= null) n.nleft.parent=n;
    if(n.nright!= null) n.nright.parent=n;
    if(n.nup!= null) n.nup.parent=n;
    if(n.ndown!= null) n.ndown.parent=n;

      // Augmenting OPEN with suitable nodes from M
    for (int i = 0; i < M.size(); i++) {
        if(!(OPEN.contains(M.get(i))) && !(CLOSED.contains(M.get(i)))){
            OPEN.add(M.get(i));
            if(ht.equals("hamm")){ M.get(i).seth(hamming(M.get(i).s,goalArr));}
            else{M.get(i).seth(manhattan(M.get(i).s,goalArr));}
            M.get(i).parent=n;}
        else{
            if(ht.equals("hamm")){
                 M.get(i).seth(hamming(M.get(i).s,goalArr));}
            else{M.get(i).seth(manhattan(M.get(i).s,goalArr));}
            M.get(i).stterff(M.get(i).g+M.get(i).h);
            for(int u=0;u<CLOSED.size();u++){
                if(M.get(i).s.equals(CLOSED.get(u).s)){
            if(M.get(i).f < CLOSED.get(u).f){
                CLOSED.remove(M.get(i));
                OPEN.add(M.get(i));
                M.get(i).parent=n;}}}
                         
                     }
		
      }
 

      // Insert n into CLOSED
    OPEN.remove(n);
    CLOSED.add( n); //CLOSED.insertElementAt(n, 0);
    }while(!OPEN.isEmpty());
  }
  
  // Determines whether or not node n can be found on ArrayList A
  //
  public boolean isOnArrayList(Node n, ArrayList A) {
    for (int i = 0; i < A.size(); i++) {
        if (n.equals(A.get(i))) { //if (n.equals((Node)v.elementAt(i))) {
            return true;
      }
    }
    return false;
  }

  // Dumps final statistics to textarea
  //
  public void printm(Node n) {
    jTextArea2.append("Cost of solution: " + n.cost+"\n"); 
    jTextArea2.append("\nSolution path:\n");
    System.out.println("\nSolution path:\n");
    printp(n);
  }    

        
public void printp(Node n) {
    if (n.parent != null) {
        printp(n.parent);
        System.out.println(n.toostring());
        jTextArea2.append("\n"+n.toostring());
    }
    else {  
        System.out.println(n.toostring());
        jTextArea2.append(n.toostring());}
  }

}
public class greedy {
    
    public Node initialnodeg=new Node(startArr,0);  // Start node
    public Node goalnodeg=new Node(goalArr,0);     // Desired goal node
    public Node ng;            // Node retrieved from OPEN
    public Node tempNodeg;     // Temporary node

    public ArrayList<Node> OPENg;       // ArrayList with Node elements
    public ArrayList<Node> CLOSEDg;     //
    public ArrayList<Node> Mg;          //
    private int lowg;          // Used when selecting a node to retrive from OPEN 
    private int lowIndexg;     // 
    private int numberg;       // Temporary integer storage
    public void solveg( String ht) {
        System.out.println("in solve \n");
    // Initializing the initial node
        if(h2.equals("hamm"))
        {initialnodeg.h = hamming(startArr,goalArr);}
        else{initialnodeg.h = manhattan(startArr,goalArr);}
       
    // Instantiating OPEN, CLOSED and M
        OPENg = new ArrayList<Node>();
        CLOSEDg = new ArrayList<Node>();
        Mg = new ArrayList<Node>();
    // Placing initial node on OPEN
        OPENg.add(initialnodeg);
    // After finishing the initial phase, we enter the main loop 
	 // of the greedy algorithm
    do{
       System.out.println("in while loop /n");
      // Check if OPEN is empty, exit if this is the case
        if (OPENg.isEmpty()) {
            jTextArea2.append("Failure to solve problem:");
            System.out.println("Failure to solve problem:");
	    jTextArea2.append("OPEN is empty, exiting...");
            System.out.println("OPEN is empty, exiting...");
            return;
      }

      // Locate next node to retrieve from OPEN, based on lowest f
        lowIndexg = 0;
        lowg = OPENg.get(lowIndexg).h; //low = ((Node)OPEN.elementAt(0)).f;
        for (int i = 0; i < OPENg.size(); i++) {
            numberg = OPENg.get(i).h; //number = ((Node)OPEN.elementAt(i)).f;
	    if (numberg < lowg) {
	        lowIndexg = i;
		lowg = numberg;
		  }
      }

      // Move selected node from OPEN to n
        ng = OPENg.get(lowIndexg); 
        ng.sethtn(ht);
        jTextArea2.append("\n"+"current node"+ng.toostring()+"\n");
     //OPEN.remove(lowIndex);
    

      // Successful exit if n proves to be the goal node
        if (ng.estimate()) {
            System.out.println("in gooooooal");
            printStatistics(ng);
            break;
        }

      // Retrieve all possible successors of n
      
   //   M = n.successors();
    Mg = ng.successors();
    if(ng.nleft!= null) ng.nleft.parent=ng;
    if(ng.nright!= null) ng.nright.parent=ng;
    if(ng.nup!= null) ng.nup.parent=ng;
    if(ng.ndown!= null) ng.ndown.parent=ng;
   
      // Augmenting OPEN with suitable nodes from M
    for (int i = 0; i < Mg.size(); i++) {
        if(!(OPENg.contains(Mg.get(i))) && !(CLOSEDg.contains(Mg.get(i)))){
            OPENg.add(Mg.get(i));
            if(ht.equals("hamm")){ Mg.get(i).seth(hamming(Mg.get(i).s,goalArr));}
            else{Mg.get(i).seth(manhattan(Mg.get(i).s,goalArr));}
            Mg.get(i).parent=ng;}

      }
   

      // Insert n into CLOSED
    OPENg.remove(ng);
    CLOSEDg.add( ng); //CLOSED.insertElementAt(n, 0);
    }while(!OPENg.isEmpty());
  }
  
  // Determines whether or not node n can be found on ArrayList A
  //
  public boolean isOnArrayList(Node n, ArrayList A) {
    for (int i = 0; i < A.size(); i++) {
        if (n.equals(A.get(i))) { //if (n.equals((Node)v.elementAt(i))) {
            return true;
      }
    }
    return false;
  }

  // Dumps final statistics to textarea
  //
  public void printStatistics(Node n) {
    //jTextArea2.append("Cost of solution: " + n.cost+"\n");
    //jTextArea2.append("Number of CLOSED nodes: " + CLOSEDg.size()+"\n");
    //System.out.println("Number of CLOSED nodes: " + CLOSEDg.size()+"\n");
    //jTextArea2.append("Number of still OPEN nodes: " + OPENg.size()+"\n");
    //System.out.println("Number of still OPEN nodes: " + OPENg.size()+"\n");
    //System.out.println("Time (ms): " + (endTime - startTime));
    
    jTextArea2.append("\nSolution path:\n");
    System.out.println("\nSolution path:\n");
    printTrail(n);
  }    

        
public void printTrail(Node n) {
    if (n.parent != null) {
        printTrail(n.parent);
        System.out.println(n.toostring());
        jTextArea2.append("\n"+n.toostring());
    }
    else {  
        System.out.println(n.toostring());
        jTextArea2.append(n.toostring());}
  }

}
public boolean isInArray(String c,int v){
    int x=0;
    for(int i=0;i<v-1;i++){
        if(startArr[i].equals(c))
            x=1; }
        if(x==1)return true;
        return false;
    }
public boolean isInArray2(String c,int v){
    int x=0;
    for(int i=0;i<v-1;i++){
        if(goalArr[i].equals(c))
            x=1; }
        if(x==1)return true;
        return false;
    }
public int hamming(String []si ,String []g){
    int h=0;
    for(int i =0;i<si.length;i++){
        if(!(si[i].equals(g[i])))
            h++;
        }
        return h;
    }
public int manhattan(String []s,String[]g){
    int h=0;
    int y;
    String [][]mstart=new String[3][3];
    String [][]mgoal=new String[3][3];
    int k=0;
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            mstart[i][j]=s[k];
            mgoal[i][j]=g[k];
            k++;
            }
        }
        
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            String item=mstart[i][j];
            for(int r=0;r<3;r++){
                for(int c=0;c<3;c++){
                    if(item.equals(mgoal[r][c])){
                        int dis= Math.abs(i-r)+Math.abs(j-c);
                        h+=dis;
                           
                        }
                    }
                  }
                
            }
        }
        return h;
    }

  
    
    

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
    
        
    
   
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void h1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_h1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            // TODO add your handling code here: start
           if((jTextField1.getText().equals("")) || (jTextField2.getText().equals("")) || (jTextField3.getText().equals("")) || (jTextField4.getText().equals(""))|| (jTextField5.getText().equals(""))|| (jTextField6.getText().equals(""))||(jTextField7.getText().equals(""))|| (jTextField8.getText().equals(""))|| (jTextField9.getText().equals(""))){
             JOptionPane.showMessageDialog(null, "plz fill all tiles","Warning msg",JOptionPane.WARNING_MESSAGE);
           }
           else {//check content and take values to array
           if ((jTextField1.getText().equals("1")) || (jTextField1.getText().equals("2")) || (jTextField1.getText().equals("3")) || (jTextField1.getText().equals("4"))|| (jTextField1.getText().equals("5"))|| (jTextField1.getText().equals("6"))||(jTextField1.getText().equals("7"))|| (jTextField1.getText().equals("8"))|| (jTextField1.getText().equals("-"))){
              startArr[0]=jTextField1.getText();
              //check textField2
              if ((jTextField2.getText().equals("1")) || (jTextField2.getText().equals("2")) || (jTextField2.getText().equals("3")) || (jTextField2.getText().equals("4"))|| (jTextField2.getText().equals("5"))|| (jTextField2.getText().equals("6"))||(jTextField2.getText().equals("7"))|| (jTextField2.getText().equals("8"))|| (jTextField2.getText().equals("-"))){
                  if(!(isInArray(jTextField2.getText(),2))){
                      String s2=jTextField2.getText();
                     startArr[1]=s2; 
                     
                     //check textField3
                    if ((jTextField3.getText().equals("1")) || (jTextField3.getText().equals("2")) || (jTextField3.getText().equals("3")) || (jTextField3.getText().equals("4"))|| (jTextField3.getText().equals("5"))|| (jTextField3.getText().equals("6"))||(jTextField3.getText().equals("7"))|| (jTextField3.getText().equals("8"))|| (jTextField3.getText().equals("-"))){
                         if(!(isInArray(jTextField3.getText(),3))){
                         String s3=jTextField3.getText();
                         startArr[2]=s3; 
                         
                         //check textField4
                            if ((jTextField4.getText().equals("1")) || (jTextField4.getText().equals("2")) || (jTextField4.getText().equals("3")) || (jTextField4.getText().equals("4"))|| (jTextField4.getText().equals("5"))|| (jTextField4.getText().equals("6"))||(jTextField4.getText().equals("7"))|| (jTextField4.getText().equals("8"))|| (jTextField4.getText().equals("-"))){
                                if(!(isInArray(jTextField4.getText(),4))){
                                String s4=jTextField4.getText();
                                startArr[3]=s4;
                                //check textField5
                                if ((jTextField5.getText().equals("1")) || (jTextField5.getText().equals("2")) || (jTextField5.getText().equals("3")) || (jTextField5.getText().equals("4"))|| (jTextField5.getText().equals("5"))|| (jTextField5.getText().equals("6"))||(jTextField5.getText().equals("7"))|| (jTextField5.getText().equals("8"))|| (jTextField5.getText().equals("-"))){
                                    if(!(isInArray(jTextField5.getText(),5))){
                                    String s5=jTextField5.getText();
                                    startArr[4]=s5; 
                                    //check textField6
                                    if ((jTextField6.getText().equals("1")) || (jTextField6.getText().equals("2")) || (jTextField6.getText().equals("3")) || (jTextField6.getText().equals("4"))|| (jTextField6.getText().equals("5"))|| (jTextField6.getText().equals("6"))||(jTextField6.getText().equals("7"))|| (jTextField6.getText().equals("8"))|| (jTextField6.getText().equals("-"))){
                                        if(!(isInArray(jTextField6.getText(),6))){
                                        String s6=jTextField6.getText();
                                        startArr[5]=s6; 
                                         //check txtfeild7
                                        if ((jTextField7.getText().equals("1")) || (jTextField7.getText().equals("2")) || (jTextField7.getText().equals("3")) || (jTextField7.getText().equals("4"))|| (jTextField7.getText().equals("5"))|| (jTextField7.getText().equals("6"))||(jTextField7.getText().equals("7"))|| (jTextField7.getText().equals("8"))|| (jTextField7.getText().equals("-"))){
                                            if(!(isInArray(jTextField7.getText(),7))){
                                            String s7=jTextField7.getText();
                                            startArr[6]=s7; 
                                            //check textfeild8
                                            if ((jTextField8.getText().equals("1")) || (jTextField8.getText().equals("2")) || (jTextField8.getText().equals("3")) || (jTextField8.getText().equals("4"))|| (jTextField8.getText().equals("5"))|| (jTextField8.getText().equals("6"))||(jTextField8.getText().equals("7"))|| (jTextField8.getText().equals("8"))|| (jTextField8.getText().equals("-"))){
                                                if(!(isInArray(jTextField8.getText(),8))){
                                                String s8=jTextField8.getText();
                                                startArr[7]=s8; 
                                                //check txtfeild9
                                                if ((jTextField9.getText().equals("1")) || (jTextField9.getText().equals("2")) || (jTextField9.getText().equals("3")) || (jTextField9.getText().equals("4"))|| (jTextField9.getText().equals("5"))|| (jTextField9.getText().equals("6"))||(jTextField9.getText().equals("7"))|| (jTextField9.getText().equals("8"))|| (jTextField9.getText().equals("-"))){
                                                    if(!(isInArray(jTextField9.getText(),9))){
                                                    String s9=jTextField9.getText();
                                                    startArr[8]=s9;
                                                    JOptionPane.showMessageDialog(null, "Start State done","",JOptionPane.INFORMATION_MESSAGE);}
                                                    
                                                    else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                                else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                                else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                            else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                            else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                        else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                        else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                    else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                    else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                            else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                            else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                        else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                        else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}} 
           else {JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}
           
           }

//else not empty
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setText(""); 
        jTextField2.setText("");   
        jTextField3.setText("");
        jTextField4.setText("");   
        jTextField5.setText("");   
        jTextField6.setText("");   
        jTextField7.setText("");   
        jTextField8.setText("");   
        jTextField9.setText(""); 
        jTextArea2.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     if((jTextField1.getText().equals("")) || (jTextField2.getText().equals("")) || (jTextField3.getText().equals("")) || (jTextField4.getText().equals(""))|| (jTextField5.getText().equals(""))|| (jTextField6.getText().equals(""))||(jTextField7.getText().equals(""))|| (jTextField8.getText().equals(""))|| (jTextField9.getText().equals(""))){
             JOptionPane.showMessageDialog(null, "plz fill all tiles","Warning msg",JOptionPane.WARNING_MESSAGE);
           }
           else {//check content and take values to array
           if ((jTextField1.getText().equals("1")) || (jTextField1.getText().equals("2")) || (jTextField1.getText().equals("3")) || (jTextField1.getText().equals("4"))|| (jTextField1.getText().equals("5"))|| (jTextField1.getText().equals("6"))||(jTextField1.getText().equals("7"))|| (jTextField1.getText().equals("8"))|| (jTextField1.getText().equals("-"))){
              goalArr[0]=jTextField1.getText();
              //check textField2
              if ((jTextField2.getText().equals("1")) || (jTextField2.getText().equals("2")) || (jTextField2.getText().equals("3")) || (jTextField2.getText().equals("4"))|| (jTextField2.getText().equals("5"))|| (jTextField2.getText().equals("6"))||(jTextField2.getText().equals("7"))|| (jTextField2.getText().equals("8"))|| (jTextField2.getText().equals("-"))){
                  if(!(isInArray2(jTextField2.getText(),2))){
                      String s2=jTextField2.getText();
                     goalArr[1]=s2; 
                     
                     //check textField3
                    if ((jTextField3.getText().equals("1")) || (jTextField3.getText().equals("2")) || (jTextField3.getText().equals("3")) || (jTextField3.getText().equals("4"))|| (jTextField3.getText().equals("5"))|| (jTextField3.getText().equals("6"))||(jTextField3.getText().equals("7"))|| (jTextField3.getText().equals("8"))|| (jTextField3.getText().equals("-"))){
                         if(!(isInArray2(jTextField3.getText(),3))){
                         String s3=jTextField3.getText();
                         goalArr[2]=s3; 
                         
                         //check textField4
                            if ((jTextField4.getText().equals("1")) || (jTextField4.getText().equals("2")) || (jTextField4.getText().equals("3")) || (jTextField4.getText().equals("4"))|| (jTextField4.getText().equals("5"))|| (jTextField4.getText().equals("6"))||(jTextField4.getText().equals("7"))|| (jTextField4.getText().equals("8"))|| (jTextField4.getText().equals("-"))){
                                if(!(isInArray2(jTextField4.getText(),4))){
                                String s4=jTextField4.getText();
                                goalArr[3]=s4;
                                //check textField5
                                if ((jTextField5.getText().equals("1")) || (jTextField5.getText().equals("2")) || (jTextField5.getText().equals("3")) || (jTextField5.getText().equals("4"))|| (jTextField5.getText().equals("5"))|| (jTextField5.getText().equals("6"))||(jTextField5.getText().equals("7"))|| (jTextField5.getText().equals("8"))|| (jTextField5.getText().equals("-"))){
                                    if(!(isInArray2(jTextField5.getText(),5))){
                                    String s5=jTextField5.getText();
                                    goalArr[4]=s5; 
                                    //check textField6
                                    if ((jTextField6.getText().equals("1")) || (jTextField6.getText().equals("2")) || (jTextField6.getText().equals("3")) || (jTextField6.getText().equals("4"))|| (jTextField6.getText().equals("5"))|| (jTextField6.getText().equals("6"))||(jTextField6.getText().equals("7"))|| (jTextField6.getText().equals("8"))|| (jTextField6.getText().equals("-"))){
                                        if(!(isInArray2(jTextField6.getText(),6))){
                                        String s6=jTextField6.getText();
                                        goalArr[5]=s6; 
                                         //check txtfeild7
                                        if ((jTextField7.getText().equals("1")) || (jTextField7.getText().equals("2")) || (jTextField7.getText().equals("3")) || (jTextField7.getText().equals("4"))|| (jTextField7.getText().equals("5"))|| (jTextField7.getText().equals("6"))||(jTextField7.getText().equals("7"))|| (jTextField7.getText().equals("8"))|| (jTextField7.getText().equals("-"))){
                                            if(!(isInArray2(jTextField7.getText(),7))){
                                            String s7=jTextField7.getText();
                                            goalArr[6]=s7; 
                                            //check textfeild8
                                            if ((jTextField8.getText().equals("1")) || (jTextField8.getText().equals("2")) || (jTextField8.getText().equals("3")) || (jTextField8.getText().equals("4"))|| (jTextField8.getText().equals("5"))|| (jTextField8.getText().equals("6"))||(jTextField8.getText().equals("7"))|| (jTextField8.getText().equals("8"))|| (jTextField8.getText().equals("-"))){
                                                if(!(isInArray2(jTextField8.getText(),8))){
                                                String s8=jTextField8.getText();
                                                goalArr[7]=s8; 
                                                //check txtfeild9
                                                if ((jTextField9.getText().equals("1")) || (jTextField9.getText().equals("2")) || (jTextField9.getText().equals("3")) || (jTextField9.getText().equals("4"))|| (jTextField9.getText().equals("5"))|| (jTextField9.getText().equals("6"))||(jTextField9.getText().equals("7"))|| (jTextField9.getText().equals("8"))|| (jTextField9.getText().equals("-"))){
                                                    if(!(isInArray2(jTextField9.getText(),9))){
                                                    String s9=jTextField9.getText();
                                                    goalArr[8]=s9;
                                                    JOptionPane.showMessageDialog(null, "Goal State done","",JOptionPane.INFORMATION_MESSAGE);}
                                                    
                                                    else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                                else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                                else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                            else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                            else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                        else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                        else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                    else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                    else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                                else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                            else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                            else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                        else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                        else{JOptionPane.showMessageDialog(null, "The value is already exist ! plz insert another value","Warning msg",JOptionPane.WARNING_MESSAGE);}}
                else{JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}} 
           else {JOptionPane.showMessageDialog(null, "plz insert valid value","Warning msg",JOptionPane.WARNING_MESSAGE);}
           
           }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if( startArr.equals("") ){
            JOptionPane.showMessageDialog(null, "plz insert Start State","Warning msg",JOptionPane.WARNING_MESSAGE);
        }
        else if(goalArr.equals("") ){
             JOptionPane.showMessageDialog(null, "plz insert Goal State","Warning msg",JOptionPane.WARNING_MESSAGE);
        }
        else{
        if(h1.isSelected()){
             //int x = hamming(startArr,goalArr);
            if(Astar.isSelected()){                
                AStar sol=new AStar();                
                sol.solve("hamm");
             }
            else if(Greedy.isSelected()){
                greedy solg=new greedy();
                solg.solveg("hamm");
                 
             }
             else{JOptionPane.showMessageDialog(null, "Select algorithm plz !","Warning msg",JOptionPane.WARNING_MESSAGE);}
         }
        else if(h2.isSelected()){
            int x=manhattan(startArr,goalArr);
            if(Astar.isSelected()){                
                AStar sol=new AStar();               
                sol.solve("manh");
             }
            else if(Greedy.isSelected()){
                greedy solg=new greedy();
                solg.solveg("manh");
                 
             }
             else{JOptionPane.showMessageDialog(null, "Select algorithm plz !","Warning msg",JOptionPane.WARNING_MESSAGE);}
             
             
         }
         else{ JOptionPane.showMessageDialog(null, "Select heuristic plz !","Warning msg",JOptionPane.WARNING_MESSAGE);}
         
    }//GEN-LAST:event_jButton4ActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ai().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Astar;
    private javax.swing.JRadioButton Greedy;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton h1;
    private javax.swing.JRadioButton h2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
